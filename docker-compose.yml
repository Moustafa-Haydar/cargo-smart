services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/bge-m3:/app/bge-m3
    working_dir: /app
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: cargosmart_db
      DB_USER: postgres
      DB_PASSWORD: password
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:delegated
    working_dir: /app
    command: npm start
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=false

  frontend-ops:
    build:
      context: ./frontend_ops_manager
      dockerfile: Dockerfile
    container_name: frontend-ops
    ports:
      - "4200:4200"
    volumes:
      - ./frontend_ops_manager:/app
      - /app/node_modules          # prevent overwriting node_modules
      - /app/.angular/cache        # fix cache permissions
    working_dir: /app
    stdin_open: true
    tty: true


  db:
    image: postgres:16
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: cargosmart_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db
  
  n8n:
    image: n8nio/n8n
    container_name: cargosmart-n8n
    ports:
      - "5678:5678"
    volumes:
      - ./n8n:/home/node/.n8n


volumes:
  pg_data: